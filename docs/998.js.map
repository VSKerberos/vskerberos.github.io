{"version":3,"file":"998.js","mappings":"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","sources":["./src/app/pages/category/action-types.ts","./src/app/pages/category/category-routing.module.ts","./src/app/pages/category/category.component.ts","./src/app/pages/category/category.component.html","./src/app/pages/category/category.effects.ts","./src/app/pages/category/category.module.ts","./src/app/pages/category/reducers/category-reducers.ts"],"sourcesContent":["\r\n\r\nimport * as CategoryActions from './category.actions';\r\n\r\nexport {CategoryActions};","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LayoutComponent} from '../../shared/layout/layout/layout.component';\nimport {CategoryComponent} from './category.component';\nimport { CategoriesResolver } from './category.resolver';\n\nconst routes: Routes = [{\n  path:'',\n  component:LayoutComponent,\n  children:[\n    {path:'', component:CategoryComponent\n     }\n  ]\n\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [CategoriesResolver]\n})\nexport class CategoryRoutingModule { }\n","import { selectAllCategories } from './category.selector';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { select, Store } from '@ngrx/store';\nimport { Observable, of, pipe } from 'rxjs';\nimport { filter, map, max, mergeMap, scan, tap } from 'rxjs/internal/operators';\nimport { ICategory } from 'src/app/core/core/models/category';\nimport { FireBaseService } from 'src/app/core/services/fire-base.service';\nimport { AppState } from 'src/app/reducers';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  categoryForm: FormGroup;\n   categories$:Observable<ICategory[]>;\n   categoryArr:ICategory[];\n   localCategory:ICategory ;\n   updatedRecord:ICategory;\n   displayedColumns: string[] = ['position', 'name','demo-actions'];\n   mode: 'create' | 'update';\n  dataSource;\n  result;\n  constructor(    private firebaseService: FireBaseService,\n                public fb: FormBuilder,\n                private dialog: MatDialog,\n                private store: Store<AppState>) {\n    this.reactiveForm();\n  }\n\n  ngOnInit(): void {\nthis.getItems();\n\n\n  }\n\n  getItems(){\n if(!this.firebaseService.IsCategoriesInLocalStorage())\n{\n  this.firebaseService.getCategories();\n} \n    \n  this.categories$ = this.firebaseService.categories$;\n    this.categories$ = this.categories$.pipe(map((data) => {\n      data.sort(this.sortByTitle)\n      return data;\n      }));\n      \n    this.dataSource = this.categories$;\n    this.mode ='create';\n  }\n\n  reactiveForm() {\n    this.categoryForm = this.fb.group({\n      title: ['',[Validators.required,Validators.minLength(3),Validators.maxLength(50)]]\n    })\n  }\n\n  submitForm(){\n    \nif(this.mode == 'create'){\n  this.localCategory =  {\n    categoryid : this.getMaxCategoryId(),\n    title : this.categoryForm.controls['title'].value,remarks:''\n\n  };\n\n    this.firebaseService.addCategory(this.localCategory).catch(error =>{\n           console.log(error);\n         });\n} else{\n  this.localCategory =  {\n    categoryid : this.updatedRecord.categoryid,\n    title : this.categoryForm.controls['title'].value,remarks:''\n\n  };\nthis.firebaseService.updateCategory(this.localCategory,this.updatedRecord.id).catch(\n  (error)=>{\n    console.log(error);\n  }\n);\n}\n\n    this.categoryForm.reset();\n    this.categoryForm.markAsPristine();\n    this.categoryForm.markAsUntouched();\n    this.localCategory = null;\n    this.mode ='create';\n    this.updatedRecord=null;\n    this.getItems();\n  }\n\n  cancel() {\n    this.categoryForm.reset();\n    this.categoryForm.markAsPristine();\n    this.categoryForm.markAsUntouched();\n    this.localCategory = null;\n    this.mode ='create';\n    this.updatedRecord=null;\n  }\n\n\n  getMaxCategoryId():number{\n    this.categories$.subscribe((categories)=> {\n      this.categoryArr = categories as ICategory[]\n  });\n  return Math.max.apply(Math, this.categoryArr.map(function(o) { return o.categoryid; })) +1;\n  }\n\n  deleteRecord(id: any){\n    console.log('Deleted recor is: '+ id);\n    const confirmDialog = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        title:'Category Silme Doğrulama',\n        message:'Silmek istediğinizden emin misiniz?'\n      }\n    });\n\n    confirmDialog.afterClosed().subscribe(result =>{\n      if(result === true)\n      {\n      this.firebaseService.deleteCategorie(id);\n      this.mode ='create';   \n      this.getItems();\n      }\n    })\n\n \n  }\n\n  updateRecord(element:ICategory){\n    this.mode ='update';\n    this.categoryForm.patchValue({title: element.title});\n    this.updatedRecord = element;\n  }\n\n  sortByTitle(a,b){\n    if (b.title > a.title) return -1;\n      if (b.title < a.title) return 1;\n      return 0;\n  }\n\n\n}\n","<div class=\"container\">\n\n    <div class=\"mat-display-3 special-header\" fxLayoutAlign=\"center center\">\n        Kategori Tanımlama\n    </div>\n\n    <mat-dialog-content>\n        <div class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\n            <div fxFlex=\"95%\">\n                <form [formGroup]=\"categoryForm\" (ngSubmit)=\" categoryForm.valid && submitForm()\" autocomplete=\"off\">\n                    <mat-card>\n                        <mat-card-header>\n                            <mat-card-title>\n                                <h2 mat-dialog-title> </h2>\n                            </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content>\n                            <div class=\"row\">\n                                <div>\n                                    <app-text-input [formControl]='categoryForm.controls[\"title\"]' [label]='\"Kategori adı\"' [error]=\"'Lütfen kategori adı giriniz'\" [minlength]='\"3\"' [maxlength]='\"40\"'></app-text-input>\n                                </div>\n                            </div>\n\n\n\n                        </mat-card-content>\n                        <mat-card-actions>\n                            <button color=\"primary\" [disabled]='!categoryForm.valid' mat-raised-button>\n                            Kaydet \n                        </button>\n\n                            <button color=\"secondary\" (click)=\"cancel()\" mat-raised-button>\n                            Temizle\n                        </button>\n\n\n\n                        </mat-card-actions>\n\n                    </mat-card>\n\n\n\n\n\n\n\n                </form>\n            </div>\n\n        </div>\n\n    </mat-dialog-content>\n\n\n</div>\n\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef> Kategori Kodu </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.categoryid}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Kategori Adı </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"demo-actions\">\n        <th mat-header-cell *matHeaderCellDef> İşlem Bölümü</th>\n        <md-cell *matCellDef=\"let element\">\n\n            <button mat-icon-button color=\"primary\" matTooltip=\"Güncelle\" matTooltipPosition=\"right\" (click)=\"updateRecord(element)\" aria-label=\"Example icon button with a home icon\">\n                <mat-icon>edit</mat-icon>\n            </button>\n\n            <button mat-icon-button color=\"warn\" matTooltip=\"Sil\" matTooltipPosition=\"right\" (click)=\"deleteRecord(element.id)\" aria-label=\"Example icon button with a home icon\">\n                <mat-icon>delete_outline</mat-icon>\n            </button>\n\n\n\n        </md-cell>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { concatMap, map } from 'rxjs/operators';\r\nimport { FireBaseService } from 'src/app/core/services/fire-base.service';\r\nimport {CategoryActions} from './action-types';\r\nimport { allCategoriesLoaded } from './category.actions';\r\n\r\n\r\n@Injectable()\r\nexport class CategoryEffects {\r\n\r\n    loadCategories$ = createEffect(\r\n        ()=> this.actions$.pipe(\r\n            ofType(CategoryActions.loadAllCategories),\r\n            concatMap(action => \r\n                this.service.getCategories()),\r\n                map(categories => allCategoriesLoaded({categories}))\r\n        )\r\n    );\r\n    constructor(private actions$: Actions,private service: FireBaseService) {\r\n\r\n\r\n    }\r\n}","import { StoreModule } from '@ngrx/store';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared/shared.module';\nimport {CategoryComponent} from './category.component';\nimport {CategoryRoutingModule} from './category-routing.module';\nimport { EffectsModule } from '@ngrx/effects';\nimport {CategoryEffects} from './category.effects';\nimport { EntityDefinitionService, EntityMetadataMap } from '@ngrx/data';\nimport { CategoriesResolver } from './category.resolver';\nimport {categoriesReducer} from './reducers/category-reducers';\n\n\nconst entityMetaData: EntityMetadataMap = {\n  Category: {\n    \n  }\n\n};\n\n@NgModule({\n  declarations: [\n    CategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CategoryRoutingModule,\n    EffectsModule.forFeature([CategoryEffects]),\n    StoreModule.forFeature(\"categories\",categoriesReducer)\n    ],\n    providers: [ CategoriesResolver]\n})\nexport class CategoryModule {\n\n  constructor(private eds: EntityDefinitionService){\n\n    eds.registerMetadataMap(entityMetaData);\n  }\n }\n","import { ICategory } from './../../../core/core/models/category';\r\nimport {EntityState, createEntityAdapter} from '@ngrx/entity'\r\nimport { createReducer, on } from '@ngrx/store'\r\nimport {CategoryActions} from '../action-types';\r\n\r\nexport interface CategoryState extends EntityState<ICategory> {\r\n    \r\n}\r\n\r\n\r\n\r\nexport const adapter = createEntityAdapter<ICategory>();\r\n\r\n\r\nexport const initialCategoryState = adapter.getInitialState();\r\n\r\n\r\nexport const categoriesReducer = createReducer(\r\n\r\n    initialCategoryState,\r\n\r\n    on(CategoryActions.allCategoriesLoaded, (state,action) => adapter.setAll(action.categories,state))\r\n\r\n);\r\n\r\n\r\nexport const {selectAll} =  adapter.getSelectors();\r\n"],"names":["CategoryActions","RouterModule","LayoutComponent","CategoryComponent","CategoriesResolver","routes","path","component","children","CategoryRoutingModule","imports","forChild","exports","Validators","map","ConfirmDialogComponent","i0","ctx_r11","ctx_r13","constructor","firebaseService","fb","dialog","store","reactiveForm","ngOnInit","getItems","IsCategoriesInLocalStorage","getCategories","categories$","pipe","data","sort","sortByTitle","dataSource","mode","categoryForm","group","title","required","minLength","maxLength","submitForm","localCategory","categoryid","getMaxCategoryId","controls","value","remarks","addCategory","catch","error","console","log","updatedRecord","updateCategory","id","reset","markAsPristine","markAsUntouched","cancel","subscribe","categories","categoryArr","Math","max","apply","o","deleteRecord","confirmDialog","open","message","afterClosed","result","deleteCategorie","updateRecord","element","patchValue","a","b","selectors","decls","vars","consts","template","ctx","createEffect","ofType","concatMap","allCategoriesLoaded","CategoryEffects","actions$","service","loadAllCategories","action","factory","StoreModule","CommonModule","SharedModule","EffectsModule","categoriesReducer","entityMetaData","Category","CategoryModule","eds","registerMetadataMap","forFeature","declarations","i2","i3","createEntityAdapter","createReducer","on","adapter","initialCategoryState","getInitialState","state","setAll","selectAll","getSelectors"],"sourceRoot":"webpack:///"}