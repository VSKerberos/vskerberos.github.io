{"version":3,"file":"998.js","mappings":"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","sources":["./src/app/pages/category/category-routing.module.ts","./src/app/pages/category/category.actions.ts","./src/app/pages/category/category.component.ts","./src/app/pages/category/category.component.html","./src/app/pages/category/category.module.ts","./src/app/pages/category/category.resolver.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LayoutComponent} from '../../shared/layout/layout/layout.component';\nimport {CategoryComponent} from './category.component';\nimport { CategoriesResolver } from './category.resolver';\n\nconst routes: Routes = [{\n  path:'',\n  component:LayoutComponent,\n  children:[\n    {path:'', component:CategoryComponent,\n    resolve: {\n      categories: CategoriesResolver\n    } }\n  ]\n\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [CategoriesResolver]\n})\nexport class CategoryRoutingModule { }\n","import {ICategory} from '../../core/core/models/category';\r\nimport { createAction, props } from '@ngrx/store'\r\n\r\nexport const loadAllCategories = createAction(\r\n    \"[Categories Resolver] Load All Categories\"\r\n);\r\n\r\n\r\nexport const allCategoriesLoaded = createAction(\r\n    \"[Load Categories Effect] All Categories Loaded\",\r\n    props<{categories: ICategory[]}>()\r\n);","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, of, pipe } from 'rxjs';\nimport { filter, map, max, mergeMap, scan, tap } from 'rxjs/internal/operators';\nimport { ICategory } from 'src/app/core/core/models/category';\nimport { FireBaseService } from 'src/app/core/services/fire-base.service';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  categoryForm: FormGroup;\n   categories$:Observable<ICategory[]>;\n   categoryArr:ICategory[];\n   localCategory:ICategory ;\n   updatedRecord:ICategory;\n   displayedColumns: string[] = ['position', 'name','demo-actions'];\n   mode: 'create' | 'update';\n  dataSource;\n  result;\n  constructor(    private firebaseService: FireBaseService,\n                public fb: FormBuilder,\n                private dialog: MatDialog) {\n    this.reactiveForm();\n  }\n\n  ngOnInit(): void {\nthis.getItems();\n  }\n\n  getItems(){\n    this.firebaseService.getCategories();\n    this.categories$ = this.firebaseService.categories$;\n   \n    this.categories$ = this.categories$.pipe(map((data) => {\n      data.sort(this.sortByTitle)\n      return data;\n      }));\n      \n    this.dataSource = this.categories$;\n    this.mode ='create';\n  }\n\n  reactiveForm() {\n    this.categoryForm = this.fb.group({\n      title: ['',[Validators.required,Validators.minLength(3),Validators.maxLength(50)]]\n    })\n  }\n\n  submitForm(){\n    \nif(this.mode == 'create'){\n  this.localCategory =  {\n    categoryid : this.getMaxCategoryId(),\n    title : this.categoryForm.controls['title'].value,remarks:''\n\n  };\n\n    this.firebaseService.addCategory(this.localCategory).catch(error =>{\n           console.log(error);\n         });\n} else{\n  this.localCategory =  {\n    categoryid : this.updatedRecord.categoryid,\n    title : this.categoryForm.controls['title'].value,remarks:''\n\n  };\nthis.firebaseService.updateCategory(this.localCategory,this.updatedRecord.id).catch(\n  (error)=>{\n    console.log(error);\n  }\n);\n}\n\n    this.categoryForm.reset();\n    this.categoryForm.markAsPristine();\n    this.categoryForm.markAsUntouched();\n    this.localCategory = null;\n    this.mode ='create';\n    this.updatedRecord=null;\n    this.getItems();\n  }\n\n  cancel() {\n    this.categoryForm.reset();\n    this.categoryForm.markAsPristine();\n    this.categoryForm.markAsUntouched();\n    this.localCategory = null;\n    this.mode ='create';\n    this.updatedRecord=null;\n  }\n\n\n  getMaxCategoryId():number{\n    this.categories$.subscribe((categories)=> {\n      this.categoryArr = categories as ICategory[]\n  });\n  return Math.max.apply(Math, this.categoryArr.map(function(o) { return o.categoryid; })) +1;\n  }\n\n  deleteRecord(id: any){\n    console.log('Deleted recor is: '+ id);\n    const confirmDialog = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        title:'Category Silme Doğrulama',\n        message:'Silmek istediğinizden emin misiniz?'\n      }\n    });\n\n    confirmDialog.afterClosed().subscribe(result =>{\n      if(result === true)\n      {\n      this.firebaseService.deleteCategorie(id);\n      this.mode ='create';   \n      this.getItems();\n      }\n    })\n\n \n  }\n\n  updateRecord(element:ICategory){\n    this.mode ='update';\n    this.categoryForm.patchValue({title: element.title});\n    this.updatedRecord = element;\n  }\n\n  sortByTitle(a,b){\n    if (b.title > a.title) return -1;\n      if (b.title < a.title) return 1;\n      return 0;\n  }\n\n\n}\n","<div class=\"container\">\n\n    <div class=\"mat-display-3 special-header\" fxLayoutAlign=\"center center\">\n        Kategori Tanımlama\n    </div>\n\n    <mat-dialog-content>\n        <div class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\n            <div fxFlex=\"95%\">\n                <form [formGroup]=\"categoryForm\" (ngSubmit)=\" categoryForm.valid && submitForm()\" autocomplete=\"off\">\n                    <mat-card>\n                        <mat-card-header>\n                            <mat-card-title>\n                                <h2 mat-dialog-title> </h2>\n                            </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content>\n                            <div class=\"row\">\n                                <div>\n                                    <app-text-input [formControl]='categoryForm.controls[\"title\"]' [label]='\"Kategori adı\"' [error]=\"'Lütfen kategori adı giriniz'\" [minlength]='\"3\"' [maxlength]='\"40\"'></app-text-input>\n                                </div>\n                            </div>\n\n\n\n                        </mat-card-content>\n                        <mat-card-actions>\n                            <button color=\"primary\" [disabled]='!categoryForm.valid' mat-raised-button>\n                            Kaydet \n                        </button>\n\n                            <button color=\"secondary\" (click)=\"cancel()\" mat-raised-button>\n                            Temizle\n                        </button>\n\n\n\n                        </mat-card-actions>\n\n                    </mat-card>\n\n\n\n\n\n\n\n                </form>\n            </div>\n\n        </div>\n\n    </mat-dialog-content>\n\n\n</div>\n\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef> Kategori Kodu </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.categoryid}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Kategori Adı </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"demo-actions\">\n        <th mat-header-cell *matHeaderCellDef> İşlem Bölümü</th>\n        <md-cell *matCellDef=\"let element\">\n\n            <button mat-icon-button color=\"primary\" matTooltip=\"Güncelle\" matTooltipPosition=\"right\" (click)=\"updateRecord(element)\" aria-label=\"Example icon button with a home icon\">\n                <mat-icon>edit</mat-icon>\n            </button>\n\n            <button mat-icon-button color=\"warn\" matTooltip=\"Sil\" matTooltipPosition=\"right\" (click)=\"deleteRecord(element.id)\" aria-label=\"Example icon button with a home icon\">\n                <mat-icon>delete_outline</mat-icon>\n            </button>\n\n\n\n        </md-cell>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared/shared.module';\nimport {CategoryComponent} from './category.component';\nimport {CategoryRoutingModule} from './category-routing.module';\n\n\n@NgModule({\n  declarations: [\n    CategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CategoryRoutingModule,\n    \n  ]\n})\nexport class CategoryModule { }\n","import { Injectable } from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { finalize, first, tap } from \"rxjs/operators\";\r\nimport { AppState } from \"src/app/reducers\";\r\nimport {loadAllCategories} from './category.actions'\r\n\r\n\r\n@Injectable()\r\nexport class CategoriesResolver implements Resolve<any> {\r\n\r\n    loading = false;\r\nconstructor(private store: Store<AppState>) {}\r\n\r\n    resolve(route:ActivatedRouteSnapshot, \r\n            state: RouterStateSnapshot): Observable<any>{\r\n\r\n\r\n                return this.store.pipe(\r\n                    tap(()=>{\r\n                        if(!this.loading){\r\n                            this.loading = true;\r\n                            this.store.dispatch(loadAllCategories())\r\n                        }\r\n                    }),\r\n                    first(),\r\n                    finalize(()=> this.loading = false)\r\n\r\n                );\r\n\r\n    }\r\n\r\n}"],"names":["RouterModule","LayoutComponent","CategoryComponent","CategoriesResolver","routes","path","component","children","resolve","categories","CategoryRoutingModule","imports","forChild","exports","createAction","props","loadAllCategories","allCategoriesLoaded","Validators","map","ConfirmDialogComponent","i0","ctx_r11","ctx_r13","constructor","firebaseService","fb","dialog","reactiveForm","ngOnInit","getItems","getCategories","categories$","pipe","data","sort","sortByTitle","dataSource","mode","categoryForm","group","title","required","minLength","maxLength","submitForm","localCategory","categoryid","getMaxCategoryId","controls","value","remarks","addCategory","catch","error","console","log","updatedRecord","updateCategory","id","reset","markAsPristine","markAsUntouched","cancel","subscribe","categoryArr","Math","max","apply","o","deleteRecord","confirmDialog","open","message","afterClosed","result","deleteCategorie","updateRecord","element","patchValue","a","b","selectors","decls","vars","consts","template","ctx","CommonModule","SharedModule","CategoryModule","declarations","finalize","first","tap","store","route","state","loading","dispatch","factory"],"sourceRoot":"webpack:///"}