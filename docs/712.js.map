{"version":3,"file":"712.js","mappings":"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","sources":["./src/app/pages/category/category-routing.module.ts","./src/app/pages/category/category.component.ts","./src/app/pages/category/category.component.html","./src/app/pages/category/category.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LayoutComponent} from '../../shared/layout/layout/layout.component';\nimport {CategoryComponent} from './category.component';\n\nconst routes: Routes = [{\n  path:'',\n  component:LayoutComponent,\n  children:[\n    {path:'', component:CategoryComponent}\n  ]\n\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoryRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable, of, pipe } from 'rxjs';\nimport { filter, map, max, mergeMap, scan, tap } from 'rxjs/internal/operators';\nimport { ICategory } from 'src/app/core/core/models/category';\nimport { FireBaseService } from 'src/app/core/services/fire-base.service';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  categoryForm: FormGroup;\n   categories$:Observable<ICategory[]>;\n   categoryArr:ICategory[];\n   localCategory:ICategory ;\n   updatedRecord:ICategory;\n   displayedColumns: string[] = ['position', 'name','demo-actions'];\n   mode: 'create' | 'update';\n  dataSource;\n  result;\n  constructor(    private firebaseService: FireBaseService,\n                public fb: FormBuilder,\n                private dialog: MatDialog) {\n    this.reactiveForm();\n  }\n\n  ngOnInit(): void {\nthis.getItems();\n  }\n\n  getItems(){\n    this.firebaseService.getCategories();\n    this.categories$ = this.firebaseService.categories$;\n   \n    this.categories$ = this.categories$.pipe(map((data) => {\n      data.sort(this.sortByTitle)\n      return data;\n      }));\n      \n    this.dataSource = this.categories$;\n    this.mode ='create';\n  }\n\n  reactiveForm() {\n    this.categoryForm = this.fb.group({\n      title: ['',[Validators.required,Validators.minLength(3),Validators.maxLength(50)]]\n    })\n  }\n\n  submitForm(){\n    \nif(this.mode == 'create'){\n  this.localCategory =  {\n    categoryid : this.getMaxCategoryId(),\n    title : this.categoryForm.controls['title'].value,remarks:''\n\n  };\n\n    this.firebaseService.addCategory(this.localCategory).catch(error =>{\n           console.log(error);\n         });\n} else{\n  this.localCategory =  {\n    categoryid : this.updatedRecord.categoryid,\n    title : this.categoryForm.controls['title'].value,remarks:''\n\n  };\nthis.firebaseService.updateCategory(this.localCategory,this.updatedRecord.id).catch(\n  (error)=>{\n    console.log(error);\n  }\n);\n}\n\n    this.categoryForm.reset();\n    this.categoryForm.markAsPristine();\n    this.categoryForm.markAsUntouched();\n    this.localCategory = null;\n    this.mode ='create';\n    this.updatedRecord=null;\n    this.getItems();\n  }\n\n  cancel() {\n    this.categoryForm.reset();\n    this.categoryForm.markAsPristine();\n    this.categoryForm.markAsUntouched();\n    this.localCategory = null;\n    this.mode ='create';\n    this.updatedRecord=null;\n  }\n\n\n  getMaxCategoryId():number{\n    this.categories$.subscribe((categories)=> {\n      this.categoryArr = categories as ICategory[]\n  });\n  return Math.max.apply(Math, this.categoryArr.map(function(o) { return o.categoryid; })) +1;\n  }\n\n  deleteRecord(id: any){\n    console.log('Deleted recor is: '+ id);\n    const confirmDialog = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        title:'Category Silme Doğrulama',\n        message:'Silmek istediğinizden emin misiniz?'\n      }\n    });\n\n    confirmDialog.afterClosed().subscribe(result =>{\n      if(result === true)\n      {\n      this.firebaseService.deleteCategorie(id);\n      this.mode ='create';   \n      this.getItems();\n      }\n    })\n\n \n  }\n\n  updateRecord(element:ICategory){\n    this.mode ='update';\n    this.categoryForm.patchValue({title: element.title});\n    this.updatedRecord = element;\n  }\n\n  sortByTitle(a,b){\n    if (b.title > a.title) return -1;\n      if (b.title < a.title) return 1;\n      return 0;\n  }\n\n\n}\n","<div class=\"container\">\n\n    <div class=\"mat-display-3 special-header\" fxLayoutAlign=\"center center\">\n        Kategori Tanımlama\n    </div>\n\n    <mat-dialog-content>\n        <div class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"center none\">\n            <div fxFlex=\"95%\">\n                <form [formGroup]=\"categoryForm\" (ngSubmit)=\" categoryForm.valid && submitForm()\" autocomplete=\"off\">\n                    <mat-card>\n                        <mat-card-header>\n                            <mat-card-title>\n                                <h2 mat-dialog-title> </h2>\n                            </mat-card-title>\n                        </mat-card-header>\n                        <mat-card-content>\n                            <div class=\"row\">\n                                <div>\n                                    <app-text-input [formControl]='categoryForm.controls[\"title\"]' [label]='\"Kategori adı\"' [error]=\"'Lütfen kategori adı giriniz'\" [minlength]='\"3\"' [maxlength]='\"40\"'></app-text-input>\n                                </div>\n                            </div>\n\n\n\n                        </mat-card-content>\n                        <mat-card-actions>\n                            <button color=\"primary\" [disabled]='!categoryForm.valid' mat-raised-button>\n                            Kaydet \n                        </button>\n\n                            <button color=\"secondary\" (click)=\"cancel()\" mat-raised-button>\n                            Temizle\n                        </button>\n\n\n\n                        </mat-card-actions>\n\n                    </mat-card>\n\n\n\n\n\n\n\n                </form>\n            </div>\n\n        </div>\n\n    </mat-dialog-content>\n\n\n</div>\n\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef> Kategori Kodu </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.categoryid}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Kategori Adı </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"demo-actions\">\n        <th mat-header-cell *matHeaderCellDef> İşlem Bölümü</th>\n        <md-cell *matCellDef=\"let element\">\n\n            <button mat-icon-button color=\"primary\" matTooltip=\"Güncelle\" matTooltipPosition=\"right\" (click)=\"updateRecord(element)\" aria-label=\"Example icon button with a home icon\">\n                <mat-icon>edit</mat-icon>\n            </button>\n\n            <button mat-icon-button color=\"warn\" matTooltip=\"Sil\" matTooltipPosition=\"right\" (click)=\"deleteRecord(element.id)\" aria-label=\"Example icon button with a home icon\">\n                <mat-icon>delete_outline</mat-icon>\n            </button>\n\n\n\n        </md-cell>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared/shared.module';\nimport {CategoryComponent} from './category.component';\nimport {CategoryRoutingModule} from './category-routing.module';\n\n\n@NgModule({\n  declarations: [\n    CategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    CategoryRoutingModule\n  ]\n})\nexport class CategoryModule { }\n"],"names":[],"sourceRoot":"webpack:///"}